.. _developmentguide:

Development Guide
=================

Please read our :ref:`Contributing guide lines <contributing>` first.

.. _requirements:

Requirements
------------

You can find any required library for this project in the *requirements.txt*:

.. literalinclude:: ../requirements.txt

You can install them by

.. code-block:: bash

    # for python3
    pip3 install -r requirements.txt --user

    # for python2
    pip install -r requirements.txt --user

NOTE: Make sure to have also all the extensions listed in the `docs/conf.py`
that are required for the SDK Documentation.

.. _docs/conf.py: https://rawgit.com/hexonet/python-sdk/master/docs/conf.py

We suggest to use `Visual Studio Code`_ with installed plugins for Python
Development described here_. But if you prefer any other IDE / Editor, it
is fine.

.. _Visual Studio Code: https://code.visualstudio.com
.. _here: https://code.visualstudio.com/docs/languages/python

.. _testsnvalidation:

Run Tests and Code Validation
-----------------------------

Automated tests can be triggered by

.. code-block:: bash

    ./scripts/coverage.sh

Code validation and auto-fixing can be run by

.. code-block:: bash

    # to autofix possible issues
    ./scripts/pep8fix.sh

    # to check for issues left
    ./scripts/pep8check.sh

Please fix all issues before creating a PR.

Pull Request (PR) Procedure
---------------------------
* fork our project and create a new branch.
* clone it and check this branch out
* apply your desired changes / extensions
* :ref:`run tests and code validation<testsnvalidation>`
* commit and push it to remote
* open a pull request (PR)

**We care then about the rest** - no need to worry about things like
building current realease and versioning.

**You can stop here.**

The below sections are just for our reference.
TIA for your PR and thus for your support of this project. As we have
further SDKs in other languages, it might take a bit of time to check
if we can role out that PR as we want to keep all our SDKs aligned.

Versioning
----------

We use SemVer_ for versioning. For the versions available, see the
`tags on this repository`_. New version numbers will be set automatically
through npm module semantic-release which is part of our CI/CD.

.. _SemVer: http://semver.org/
.. _tags on this repository: https://github.com/hexonet/python-sdk/tags

Releasing
---------

Our Travis CI integration cares about checking the PR for issues. If all
looks fine, please care about rebasing to current HEAD of master branch.
Now you can merge the PR into master branch. Travis CI and semantic-release
care about releasing and uploading. This also includes automatic update of
changelog and source code documentation.

Changes will be auto-deployed by a webhook to readthedocs.org_ and
automatically updated on `github pages`_.

.. _readthedocs.org: https://hexonet-python-sdk.readthedocs.io
.. _github pages: https://hexonet.github.io/python-sdk

Publish your changes to the Python Package Index (PyPi_) by

.. _PyPi: https://pypi.org/

.. code-block:: bash

    ./scripts/createdistribution.sh
    # to create packages of the new distribution

    ./scripts/uploaddistribution_test.sh
    # to upload the generated packages to the PyPi Test Index (test.pypi.org)

    ./scripts/uploaddistribution_live.sh
    # to upload the generated packages to the PyPi Index (pypi.org)

The module can be accessed on the `PyPi (Live) Index`_ and the
`PyPi (Test) Index`_.

.. _PyPi (Live) Index: https://pypi.org/project/hexonet.apiconnector/
.. _PyPi (Test) Index: https://test.pypi.org/project/hexonet.apiconnector/

SDK Documentation
-----------------

Have an eye on the generated :ref:`api`.

If you want to generate it from scratch out of the sources, please use
the below script:

.. code-block:: bash

    ./scripts/generatedocs.sh

The generated files are then available in subfolder "docs/_build/html".
